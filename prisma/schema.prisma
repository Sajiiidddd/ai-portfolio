generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?  // <- Now optional
  email     String  @unique
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  comments Comment[]
  votes    Vote[]
}


model Blog {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  description String
  content     String
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  comments Comment[]
  votes    Vote[]
}

model Comment {
  id        String   @id @default(cuid())
  blogId    String
  userId    String
  author    String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  blog Blog @relation(fields: [blogId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id])
}

model Vote {
  id        String   @id @default(cuid())
  blog      Blog     @relation(fields: [blogId], references: [id])
  blogId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  type      VoteType @default(UPVOTE) // <-- Add a default value for type
  createdAt DateTime @default(now())

  @@unique([blogId, userId]) // âœ… This is the important part!
}

enum VoteType {
  UPVOTE
  DOWNVOTE
}
